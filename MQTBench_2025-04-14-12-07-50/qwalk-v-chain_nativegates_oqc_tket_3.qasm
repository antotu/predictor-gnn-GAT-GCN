// Benchmark was created by MQT Bench on 2024-03-19
// For more information about MQT Bench, please visit https://www.cda.cit.tum.de/mqtbench/
// MQT Bench version: 1.1.0
// TKET version: 1.25.0
// Used Gate Set: ['rz', 'sx', 'x', 'ecr', 'measure', 'barrier']

OPENQASM 2.0;
include "qelib1.inc";
opaque ecr q0,q1;

qreg coin[1];
qreg node[2];
creg meas[3];
sx coin[0];
rz(3.5*pi) node[0];
rz(3.3238401078333175*pi) node[1];
rz(0.5*pi) coin[0];
sx node[0];
sx node[1];
sx coin[0];
rz(0.40829858611414727*pi) node[0];
rz(2.106692196686541*pi) node[1];
sx coin[0];
sx node[0];
sx node[1];
sx node[0];
rz(3.331882784215975*pi) node[1];
sx node[1];
rz(1.5*pi) node[1];
x node[1];
rz(3.5*pi) node[1];
ecr node[1],node[0];
rz(1.0*pi) node[0];
x node[1];
x node[0];
sx node[1];
rz(0.5*pi) node[0];
x node[1];
sx node[0];
rz(3.5*pi) node[1];
ecr node[1],node[0];
rz(3.7524236186812443*pi) node[0];
sx node[1];
sx node[0];
rz(0.5*pi) node[1];
x node[1];
rz(3.5*pi) node[1];
ecr node[1],node[0];
rz(1.0*pi) node[0];
rz(1.0*pi) node[1];
rz(1.0*pi) node[0];
rz(1.0*pi) node[1];
rz(1.0039893004148068*pi) node[0];
rz(0.8269557489175727*pi) node[1];
sx node[0];
sx node[1];
rz(2.449497787162198*pi) node[0];
rz(1.5*pi) node[1];
sx node[0];
rz(2.5*pi) node[1];
rz(0.0672980118604467*pi) node[0];
sx node[1];
sx node[0];
rz(1.5*pi) node[1];
sx node[0];
x node[1];
rz(3.5*pi) node[1];
ecr node[1],coin[0];
rz(0.5*pi) coin[0];
sx node[1];
sx coin[0];
rz(0.5*pi) node[1];
rz(1.5*pi) coin[0];
rz(1.5256668844344308*pi) node[1];
sx coin[0];
sx node[1];
sx coin[0];
rz(2.4503386175868096*pi) node[1];
sx node[1];
rz(3.401177929131447*pi) node[1];
sx node[1];
rz(1.5*pi) node[1];
x node[1];
rz(3.5*pi) node[1];
ecr node[1],node[0];
rz(0.5889178843487981*pi) node[0];
rz(1.0*pi) node[1];
x node[0];
sx node[1];
rz(0.5*pi) node[0];
rz(0.9859321696064516*pi) node[1];
sx node[0];
x node[1];
rz(3.5*pi) node[1];
ecr node[1],node[0];
rz(0.03696011522749875*pi) node[0];
sx node[1];
sx node[0];
rz(0.5*pi) node[1];
x node[1];
rz(3.5*pi) node[1];
ecr node[1],node[0];
rz(0.7961076651132508*pi) node[0];
rz(1.7559896639103267*pi) node[1];
sx node[0];
sx node[1];
rz(2.1286290136417394*pi) node[0];
rz(2.4784391541164057*pi) node[1];
sx node[0];
sx node[1];
rz(3.7056087453159914*pi) node[0];
rz(0.6420850735253926*pi) node[1];
rz(2.5*pi) node[0];
sx node[1];
sx node[0];
rz(1.5*pi) node[1];
rz(1.5*pi) node[0];
x node[1];
x node[0];
rz(3.5*pi) node[1];
rz(3.5*pi) node[0];
ecr node[0],coin[0];
sx coin[0];
sx node[0];
sx coin[0];
rz(0.5*pi) node[0];
rz(0.5*pi) node[0];
sx node[0];
rz(2.539717546092367*pi) node[0];
sx node[0];
sx node[0];
ecr node[1],node[0];
rz(1.0*pi) node[0];
x node[1];
x node[0];
sx node[1];
rz(0.5*pi) node[0];
x node[1];
sx node[0];
rz(3.5*pi) node[1];
ecr node[1],node[0];
rz(3.6423044633208015*pi) node[0];
sx node[1];
sx node[0];
rz(0.5*pi) node[1];
x node[1];
rz(3.5*pi) node[1];
ecr node[1],node[0];
rz(1.0*pi) node[0];
rz(1.0*pi) node[1];
rz(1.0*pi) node[0];
rz(1.0*pi) node[1];
rz(0.3658228985811456*pi) node[0];
rz(0.8634264642993941*pi) node[1];
sx node[0];
sx node[1];
rz(2.463179839245107*pi) node[0];
rz(1.5*pi) node[1];
sx node[0];
rz(2.5*pi) node[1];
rz(1.2443769221555068*pi) node[0];
sx node[1];
sx node[0];
rz(1.5*pi) node[1];
sx node[0];
x node[1];
rz(3.5*pi) node[1];
ecr node[1],coin[0];
rz(3.5*pi) coin[0];
sx node[1];
sx coin[0];
rz(0.5*pi) node[1];
rz(0.5*pi) coin[0];
rz(0.3896099736780926*pi) node[1];
sx node[1];
rz(2.2408903512403766*pi) node[1];
sx node[1];
rz(3.4361244386105065*pi) node[1];
sx node[1];
rz(1.5*pi) node[1];
x node[1];
rz(3.5*pi) node[1];
ecr node[1],node[0];
rz(0.6163767033707148*pi) node[0];
rz(1.0*pi) node[1];
x node[0];
sx node[1];
rz(0.5*pi) node[0];
rz(0.8522861271546036*pi) node[1];
sx node[0];
x node[1];
rz(3.5*pi) node[1];
ecr node[1],node[0];
rz(0.03485778000379902*pi) node[0];
sx node[1];
sx node[0];
rz(0.5*pi) node[1];
x node[1];
rz(3.5*pi) node[1];
ecr node[1],node[0];
rz(0.5151633804660201*pi) node[0];
rz(1.0141643322839458*pi) node[1];
sx node[0];
sx node[1];
rz(1.3089898052819793*pi) node[0];
rz(0.4463935400174026*pi) node[1];
sx node[0];
sx node[1];
rz(1.5175891353183533*pi) node[0];
rz(0.5606089590362139*pi) node[1];
barrier node[0],node[1],coin[0];
measure coin[0] -> meas[2];
measure node[0] -> meas[0];
measure node[1] -> meas[1];
